My packet driver code successfully works. The sending function is able to grab the buffer by reading, send the buffer to network device, and deposit it into fpds. The receiving function is takes the buffer from fpds, is able to use the packet descriptor and network device and waits for a package. The sending function gets the pid and then writes it to the buffer. Anytime blocking is called in the two functions, both sending and receiving use nonblocking to see if it succeeds, then they use blocking. The sending buffer has size of MAX_SIZE. The receiving buffer has size of buff_size/MAX_SIZE+1. The receiving buffer has to allocate through for the size since it is an array pointer. Mine does start out with 00|36|36 but the rest of the outputs are relatively even and add to the right amount.  

Ash Davis helped me write out pseudocode for the sending and receiving functions and helped me fix a seg fault that was on line 87. Ash also went over the process of the packet driver and helped understand the cycle that goes from applications to network device. Andrew Teske helped me understand more such as grabbing a buffer and writing in a receiving buffer. Andrew also helped me bug fix a bit with pointers and addresses. 